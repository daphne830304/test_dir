# This workfloww is to GitHub Actions to build a containerized application, 
# push it to Amazon Elastic Container Registry (ECR), 
# and deploy it to Amazon Elastic Container Service (ECS).

name: Deploy to Amazon EKS

on:
  push:
    branches: [ master ]
#   pull_request:
#     branches: [ master ]

env:
  AWS_REGION: us-east-2                # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: movie-app          # set this to your Amazon ECR repository name
  # ECS_SERVICE: movie-app-service                 # set this to your Amazon ECS service name
  # ECS_CLUSTER: movie-app                # set this to your Amazon ECS cluster name
  # ECS_TASK_DEFINITION: task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  # CONTAINER_NAME: movie-app           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # permissions:
    #   packages: write
    #   contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./Docker
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
